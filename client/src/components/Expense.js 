class Expense(db.Model, SerializerMixin):
    __tablename__ = "expenses"

    id = db.Column(db.Integer, primary_key=True)
    description = db.Column(db.String, nullable=False)
    amount = db.Column(db.Float, nullable=False)
    date = db.Column(db.Date, nullable=False)
    category_id = db.Column(db.Integer, db.ForeignKey("categories.id"), nullable=False)
    user_id = db.Column(db.Integer, db.ForeignKey("users.id"), nullable=False)

    # Relationships
    user = db.relationship("User", back_populates="expenses")
    category = db.relationship("Category", back_populates="expenses")

    serialize_rules = ("-user.expenses", "-category.expenses",)

    @validates("amount")
    def validate_amount(self, key, value):
        if value <= 0:
            raise ValueError("Amount must be greater than 0.")
        return value

    def __repr__(self):
        return f"<Expense {self.description}, ${self.amount}, {self.date}>"
